"""add class mixins

Revision ID: 3f80f0c8adf1
Revises: 427f38ad688f
Create Date: 2015-08-31 12:59:49.789227

"""

# revision identifiers, used by Alembic.
revision = '3f80f0c8adf1'
down_revision = '427f38ad688f'

from alembic import op
import sqlalchemy as sa

from purchasing.data.models import TRIGGER_TUPLES

def upgrade():
    conn = op.get_bind()
    ### commands auto generated by Alembic - please adjust! ###
    for table, column, when in TRIGGER_TUPLES:
        conn.execute(sa.sql.text('''
            DROP TRIGGER IF EXISTS tsv_{table}_{column}_trigger_insert_update ON {table}
        '''.format(table=table, column=column)))

        conn.execute(sa.sql.text('''
            DROP TRIGGER IF EXISTS tsv_{table}_{column}_trigger_delete ON {table}
        '''.format(table=table, column=column)))

        conn.execute(sa.sql.text('''
            DROP TRIGGER IF EXISTS tsv_{table}_{column}_trigger ON {table}
        '''.format(table=table, column=column)))

    ### end Alembic commands ###


def downgrade():
    conn = op.get_bind()
    ### commands auto generated by Alembic - please adjust! ###
    for table, column, when in TRIGGER_TUPLES:
        conn.execute(sa.sql.text('''
            DROP TRIGGER IF EXISTS tsv_{table}_{column}_trigger_insert_update ON {table}
        '''.format(table=table, column=column)))

        conn.execute(sa.sql.text('''
            DROP TRIGGER IF EXISTS tsv_{table}_{column}_trigger_delete ON {table}
        '''.format(table=table, column=column)))

        conn.execute(sa.sql.text('''
            CREATE TRIGGER tsv_{table}_{column}_trigger_insert_update AFTER INSERT OR UPDATE OF {column}
            ON {table}
            FOR EACH ROW
            {when}
            EXECUTE PROCEDURE trig_refresh_search_view()
        '''.format(table=table, column=column, when=when)))

        conn.execute(sa.sql.text('''
            CREATE TRIGGER tsv_{table}_{column}_trigger_delete AFTER DELETE
            ON {table}
            FOR EACH ROW
            EXECUTE PROCEDURE trig_refresh_search_view()
        '''.format(table=table, column=column)))

    ### end Alembic commands ###
